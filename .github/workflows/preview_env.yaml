name: Deploy preview environment

on:
  pull_request:
    types:
      - opened
      - synchronize
      - closed

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout

jobs:
  build:
    if: github.event.action == 'opened' || github.event.action == 'synchronize'
    runs-on: ubuntu-latest
    env:
      APP_ENV: pr-${{ github.event.pull_request.number }}
      HUGO_CACHEDIR: /tmp/hugo_cache
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v3
        with:
          hugo-version: '0.143.1'
          extended: true

      - name: Setup just
        uses: extractions/setup-just@v2
        with:
          just-version: '1.38.0'

      - uses: actions/cache@v4
        with:
          path: ${{ env.HUGO_CACHEDIR }}
          key: ${{ runner.os }}-hugomod-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-hugomod-

      - name: Build
        run: just build-web

      - name: Archive built web
        uses: actions/upload-artifact@v4
        with:
          name: website
          path: website/*/public

  deploy:
    if: github.event.action == 'opened' || github.event.action == 'synchronize'
    needs: build
    runs-on: ubuntu-latest
    env:
      APP_ENV: pr-${{ github.event.pull_request.number }}
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v3

      - name: Download built website
        uses: actions/download-artifact@v4
        with:
          name: website
          path: website/

      - name: Set up pnpm
        uses: pnpm/action-setup@v4

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Assume GHA role
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ vars.DEPLOY_ROLE_ARN }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Diff CDK
        run: npx cdk diff ${APP_ENV}/*

      - name: Deploy CDK
        run: npx cdk deploy ${APP_ENV}/* --require-approval never

      - name: Comment on PR with preview URL
        uses: peter-evans/create-or-update-comment@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            üöÄ Preview environment is ready!

            üåê [View Preview](https://pr-${{ github.event.pull_request.number }}.awscommunityday.cz)

  destroy:
    if: github.event.action == 'closed'
    needs: build
    runs-on: ubuntu-latest
    env:
      APP_ENV: pr-${{ github.event.pull_request.number }}
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v3

      - name: Set up pnpm
        uses: pnpm/action-setup@v4

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Assume GHA role
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ vars.DEPLOY_ROLE_ARN }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Destroy CDK
        run: npx cdk destroy ${APP_ENV}/*

      - name: Comment on PR with preview URL
        uses: peter-evans/create-or-update-comment@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            üí• Preview environment destroyed!
